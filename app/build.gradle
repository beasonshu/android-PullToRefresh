/*
 * Copyright (C) 2015  Haiyang Yu Android Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        // 注意这里只是设置了appid的前缀 在buildTypes里面有设置后缀
        applicationId APPLICATION_ID
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode generateVersionCode() as int
        versionName VERSION_NAME

        // 增加一个编译版本的时间
        buildConfigField "long", "RELEASE_TIME", System.currentTimeMillis() + "L"

        // 配置 含有的版本类型
        buildConfigField "int", "VERSION_DEV", VERSION_DEV
        buildConfigField "int", "VERSION_PROD", VERSION_PROD
        // 配置默认版本-为开发版本
        buildConfigField "int", "VERSION_TYPE", VERSION_DEV
        buildConfigField "String", "VERSION_DESCRIPTION", "\"开发版本\""

        // 配置语言信息
        resConfig "zh"
        // NDK 加载lib的文件夹
        ndk {
            abiFilters "arm64-v8a", "armeabi", "armeabi-v7a", "x86", "x86_64"
        }
    }

    //签名
    signingConfigs {
        release {
            storeFile file(RELEASE_STOREFILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    productFlavors {
        // TODO
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            versionNameSuffix DEV_VERSION_NAME

            applicationIdSuffix DEV_APPLICATION_ID_SUFFIX
            // AndroidManifest 中配置的文件
            manifestPlaceholders = [
                    // App的名字
                    APP_NAME                : DEV_APP_NAME,
                    // App的ICON
                    APP_ICON                : DEV_APP_ICON,
            ]

            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_DEV
            buildConfigField "String", "VERSION_DESCRIPTION", "\"开发版本\""
        }

        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            versionNameSuffix PROD_VERSION_NAME

            applicationIdSuffix PROD_APPLICATION_ID_SUFFIX

            // AndroidManifest 中配置的文件
            manifestPlaceholders = [
                    // App的名字
                    APP_NAME                : PROD_APP_NAME,
                    // App的ICON
                    APP_ICON                : PROD_APP_ICON,
            ]

            // 设置那个版本
            buildConfigField "int", "VERSION_TYPE", VERSION_PROD
            buildConfigField "String", "VERSION_DESCRIPTION", "\"正式版本\""
        }
    }


    dexOptions {
        jumboMode true
    }

    sourceSets {
        // Move the tests to tests/java, tests/res, etc...
        //  instrumentTest.setRoot('tests')
        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
    }

    // 包名重命名，加上版本及日期
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            renameAPK(android, variant, output);
        }
    }
}




dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // 基础库
    implementation project(':pulltorefresh')

    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.1.0-alpha02")
}

